// <auto-generated />
using EcoEnergySolutionsEF.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcoEnergySolutionsEF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoEnergySolutionsEF.Classes.EnergyIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CCAC_AutoGas")
                        .HasColumnType("float");

                    b.Property<double>("CDEEBC_DispProd")
                        .HasColumnType("float");

                    b.Property<double>("CDEEBC_ElectricDemand")
                        .HasColumnType("float");

                    b.Property<double>("CDEEBC_NetProduction")
                        .HasColumnType("float");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnergyIndicator");
                });

            modelBuilder.Entity("EcoEnergySolutionsEF.Classes.Simulacio.Simulacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<double>("Parametre")
                        .HasColumnType("float");

                    b.Property<double>("Preu")
                        .HasColumnType("float");

                    b.Property<double>("Rati")
                        .HasColumnType("float");

                    b.Property<string>("TipusEnergia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Simulacio");
                });

            modelBuilder.Entity("EcoEnergySolutionsEF.Classes.WaterConsumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("DomesticConsumption")
                        .HasColumnType("float");

                    b.Property<double>("DomesticConsumptionPerCapita")
                        .HasColumnType("float");

                    b.Property<double>("EconomicActivitiesConsumption")
                        .HasColumnType("float");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionCode")
                        .HasColumnType("int");

                    b.Property<double>("TotalConsumption")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WaterConsumption");
                });
#pragma warning restore 612, 618
        }
    }
}
